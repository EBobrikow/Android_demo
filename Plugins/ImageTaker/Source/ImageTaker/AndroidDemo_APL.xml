<?xml version="1.0" encoding="utf-8"?>
<root xmlns:android="http://schemas.android.com/apk/res/android">
	<trace enable="true"/>
	<init>
		<log text="AndroidDemo init"/>		
	</init>

  <androidManifestUpdates>
    <addElements tag="application">
	  
	  <activity android:name="com.Ebob.AndroidDemo.AndroidDemoActivity"
          android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation"
          android:label="@string/app_name" />
		  
    </addElements>
    <addPermission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <addPermission android:name="android.permission.READ_EXTERNAL_STORAGE" />
		
  </androidManifestUpdates>

  <proguardAdditions>
    <insert>
    </insert>
  </proguardAdditions>

  <resourceCopies>
 
  </resourceCopies>

  <AARImports>
  </AARImports>
  
	<gameActivityImportAdditions>
	  <insert>
      import java.util.HashSet;
      import java.util.Arrays;
      import android.text.TextUtils;
      import android.os.Handler;
      import android.widget.Toast;
      import android.app.Activity;
      import android.content.Intent;
      import android.graphics.BitmapFactory;
      import android.graphics.BitmapRegionDecoder;
      import android.graphics.BitmapShader;
      import android.database.Cursor;
      import android.graphics.Bitmap;
      import android.media.Image;
      import android.provider.MediaStore;
      import java.io.ByteArrayOutputStream;
      import android.content.ContentResolver;
      import android.provider.DocumentsContract;
      import android.os.Environment;
      import android.content.ContentUris;
    </insert>
	</gameActivityImportAdditions>
	

	<gameActivityClassAdditions>
		<insert>
      <![CDATA[
      private static native void imagePicked(String code);

      public void GrabImage()
      {
        runOnUiThread(new Runnable()
        {
          public void run()
          {
            Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
            photoPickerIntent.setType("image/*");
            startActivityForResult(photoPickerIntent, 100);
           }
        });
      }
      
      private String getPathFromURI(Context context, Uri contentUri) 
      {
        Cursor cursor = null;
        try {
            String[] proj = { MediaStore.Images.Media.DATA };
            cursor = context.getContentResolver().query(contentUri,  proj, null, null, null);
            int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
            cursor.moveToFirst();
            return cursor.getString(column_index);
        } catch (Exception e) {

            return "";
        } finally {
            if (cursor != null) {
                cursor.close();
            }
        }
    }

      ]]>
    </insert>
	</gameActivityClassAdditions>
	
	<gameActivityReadMetadataAdditions>
	<insert>

  </insert>
	</gameActivityReadMetadataAdditions>

	<gameActivityOnCreateAdditions>
		<insert>
		<![CDATA[
		]]>
		</insert>
	</gameActivityOnCreateAdditions>

	<gameActivityOnDestroyAdditions>
		<insert>
		
		</insert>
	</gameActivityOnDestroyAdditions>
	
	<gameActivityOnStartAdditions>
		<insert>
		
		</insert>
	</gameActivityOnStartAdditions>

	<gameActivityOnStopAdditions>
		<insert>
		
		</insert>
	</gameActivityOnStopAdditions>
	

	<gameActivityOnPauseAdditions>
    <insert>
    <![CDATA[
    ]]>
    </insert>
  </gameActivityOnPauseAdditions>

  <gameActivityOnResumeAdditions>
    <insert>
    </insert>
  </gameActivityOnResumeAdditions>


	<gameActivityOnActivityResultAdditions>
		<insert>
      <![CDATA[
      
       if (requestCode == 100 && resultCode == RESULT_OK) 
       {          
            Uri imageUri = null;
            if (data != null) {
                imageUri = data.getData();
            }
            String path = "";
            if (imageUri != null) {
                path = getPathFromURI(getApplicationContext(),imageUri);
            }
            if (path != null && !path.isEmpty()) {
               imagePicked(path);
            }
                    
      }else {
            Toast.makeText(getApplicationContext(), "You haven't picked Image",Toast.LENGTH_LONG).show();
      }
      
    ]]>
      
		</insert>
    </gameActivityOnActivityResultAdditions>
	

	<soLoadLibrary>
	</soLoadLibrary>
</root>
